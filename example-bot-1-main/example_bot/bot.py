import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
import asyncio

TOKEN = token=os.environ.get('TOKEN')
CHANNEL_USERNAME = "@worldstockAI"
GOOGLE_SHEET_URL = "https://docs.google.com/spreadsheets/d/1J6GyaS_gSqG0ActRdwRUgN4iqW5y9ZgVqr0NvJzYCeQ/edit?gid=354812718#gid=354812718"

logging.basicConfig(level=logging.INFO)


bot = Bot(TOKEN)
dp = Dispatcher(bot)

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
def get_subscription_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=1)
    subscribe_button = InlineKeyboardButton(
        text="üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=f"https://t.me/{CHANNEL_USERNAME[1:]}"
    )
    check_button = InlineKeyboardButton(text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_sub")
    keyboard.add(subscribe_button, check_button)
    return keyboard

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
async def check_subscription(user_id):
    chat_member = await bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
    return chat_member.status in ["member", "administrator", "creator"]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(commands=["start"])
async def start_command(message: types.Message):
    user_id = message.from_user.id
    if await check_subscription(user_id):
        keyboard = InlineKeyboardMarkup(row_width=1)
        sheet_button = InlineKeyboardButton("üìÑ –û—Ç–∫—Ä—ã—Ç—å Google –¢–∞–±–ª–∏—Ü—É", url=GOOGLE_SHEET_URL)
        keyboard.add(sheet_button)
        await message.answer("‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã! –í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ Google –¢–∞–±–ª–∏—Ü—É", reply_markup=keyboard)
    else:
        await message.answer(
            "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ Google –¢–∞–±–ª–∏—Ü–µ!",
            reply_markup=get_subscription_keyboard()
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"
@dp.callback_query_handler(lambda call: call.data == "check_sub")
async def check_subscription_callback(call: types.CallbackQuery):
    user_id = call.from_user.id
    if await check_subscription(user_id):
        keyboard = InlineKeyboardMarkup(row_width=1)
        sheet_button = InlineKeyboardButton("üìÑ –û—Ç–∫—Ä—ã—Ç—å Google –¢–∞–±–ª–∏—Ü—É", url=GOOGLE_SHEET_URL)
        keyboard.add(sheet_button)
        await call.message.edit_text("‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã! –í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ Google –¢–∞–±–ª–∏—Ü—É", reply_markup=keyboard)
    else:
        await call.answer("‚ö†Ô∏è –í—ã –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª!", show_alert=True)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling()

if __name__ == "__main__":
    asyncio.run(main())
